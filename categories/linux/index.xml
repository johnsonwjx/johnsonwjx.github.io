<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Linux on Johnson</title>
    <link>/categories/linux/</link>
    <description>Recent content in Linux on Johnson</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <copyright>Copyright (c) 2017, all rights reserved.</copyright>
    <lastBuildDate>Fri, 04 Aug 2017 09:59:19 +0800</lastBuildDate>
    
	<atom:link href="/categories/linux/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>(转载) Systemd 入门教程：实战篇</title>
      <link>/post/system-practise/</link>
      <pubDate>Fri, 04 Aug 2017 09:59:19 +0800</pubDate>
      
      <guid>/post/system-practise/</guid>
      <description>原文: http://www.ruanyifeng.com/blog/2016/03/systemd-tutorial-part-two.html
开机启动 对于那些支持 Systemd 的软件，安装的时候，会自动在/usr/lib/systemd/system目录添加一个配置文件。 如果你想让该软件开机启动，就执行下面的命令（以httpd.service为例）。
$ sudo systemctl enable httpd #上面的命令相当于在/etc/systemd/system目录添加一个符号链接，指向/usr/lib/systemd/system里面的httpd.service文件。 #这是因为开机时，Systemd只执行/etc/systemd/system目录里面的配置文件。这也意味着，如果把修改后的配置文件放在该目录，就可以达到覆盖原始配置的效果。  启动服务 设置开机启动以后，软件并不会立即启动，必须等到下一次开机。如果想现在就运行该软件，那么要执行systemctl start命令。
$ sudo systemctl start httpd 执行上面的命令以后，有可能启动失败，因此要用systemctl status命令查看一下该服务的状态。 $ sudo systemctl status httpd httpd.service - The Apache HTTP Server Loaded: loaded (/usr/lib/systemd/system/httpd.service; enabled) Active: active (running) since 金 2014-12-05 12:18:22 JST; 7min ago Main PID: 4349 (httpd) Status: &amp;quot;Total requests: 1; Current requests/sec: 0; Current traffic: 0 B/sec&amp;quot; CGroup: /system.slice/httpd.service ├─4349 /usr/sbin/httpd -DFOREGROUND ├─4350 /usr/sbin/httpd -DFOREGROUND ├─4351 /usr/sbin/httpd -DFOREGROUND ├─4352 /usr/sbin/httpd -DFOREGROUND ├─4353 /usr/sbin/httpd -DFOREGROUND └─4354 /usr/sbin/httpd -DFOREGROUND 12月 05 12:18:22 localhost.</description>
    </item>
    
    <item>
      <title>(转载)Systemd 入门教程：命令篇</title>
      <link>/post/systemd/</link>
      <pubDate>Fri, 04 Aug 2017 09:24:06 +0800</pubDate>
      
      <guid>/post/systemd/</guid>
      <description>原文 http://www.ruanyifeng.com/blog/2016/03/systemd-tutorial-commands.html
由来 历史上，Linux 的启动一直采用init进程。 下面的命令用来启动服务。
$ sudo /etc/init.d/apache2 start # 或者 $ service apache2 start  这种方法有两个缺点。 1. 是启动时间长。init进程是串行启动，只有前一个进程启动完，才会启动下一个进程。 2. 是启动脚本复杂。init进程只是执行启动脚本，不管其他事情。脚本需要自己处理各种情况，这往往使得脚本变得很长。
Systemd 概述  Systemd 就是为了解决这些问题而诞生的。它的设计目标是，为系统的启动和管理提供一套完整的解决方案。 根据 Linux 惯例，字母d是守护进程（daemon）的缩写。 Systemd 这个名字的含义，就是它要守护整个系统。
使用了 Systemd，就不需要再用init了。Systemd 取代了initd，成为系统的第一个进程（PID 等于 1），其他进程都是它的子进程。
 $ systemctl &amp;ndash;version 上面的命令查看 Systemd 的版本。
 Systemd 的优点是功能强大，使用方便，缺点是体系庞大，非常复杂。事实上，现在还有很多人反对使用 Systemd，理由就是它过于复杂，与操作系统的其他部分强耦合，违反&amp;rdquo;keep simple, keep stupid&amp;rdquo;的Unix 哲学。
 系统管理 Systemd 并不是一个命令，而是一组命令，涉及到系统管理的方方面面。
systemctl systemctl是 Systemd 的主命令，用于管理系统。
 重启系统 $ sudo systemctl reboot # 关闭系统，切断电源 $ sudo systemctl poweroff # CPU停止工作 $ sudo systemctl halt # 暂停系统 $ sudo systemctl suspend # 让系统进入冬眠状态 $ sudo systemctl hibernate # 让系统进入交互式休眠状态 $ sudo systemctl hybrid-sleep # 启动进入救援状态（单用户状态） $ sudo systemctl rescue  systemd-analyze systemd-analyze命令用于查看启动耗时。</description>
    </item>
    
    <item>
      <title>useradd tab无效，无配色</title>
      <link>/post/user_add/</link>
      <pubDate>Thu, 03 Aug 2017 20:07:35 +0800</pubDate>
      
      <guid>/post/user_add/</guid>
      <description>新增用户 useradd -m $username 没指定 shell 路径 默认 为sh,应该指定 /bin/bash
sudo useradd username -s /bin/bash 如果出现这种情况，修改方法也很简单，修改 /etc/passwd 文件，进入这个文件以后，你会看到你的帐号信息，大概应该是这样的：
root:x:0:0:root:/root:/bin/bash work:x:1000:1000::/home/work  你会发现work的root有区别，我们只需要简单的调整为：
work:x:1000:1000::/home/work:/bin/bash
然后保存并退出此文件，然后重新连接远程主机，你在试试，是不是已经恢复了？</description>
    </item>
    
  </channel>
</rss>